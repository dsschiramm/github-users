{"version":3,"sources":["webpack:///node_modules/intersection-observer/intersection-observer.js","webpack:///src/polyfills.ts","webpack:///node_modules/zone.js/dist/zone-evergreen.js"],"names":["window","IntersectionObserverEntry","prototype","Object","defineProperty","get","this","intersectionRatio","document","registry","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","observe","target","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","entry","_monitorIntersections","_checkForIntersections","unobserve","filter","length","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","t","i","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","value","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","Math","max","min","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","indexOf","index","splice","targetArea","Number","toFixed","callback","opt_options","fn","timeout","timer","options","bind","setTimeout","rootMargin","join","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","el","err","child","parentNode","host","assignedSlot","global","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Zone","zoneSpec","_parent","_name","_properties","properties","_zoneDelegate","ZoneDelegate","patches","zone","current","_currentZoneFrame","_currentTask","hasOwnProperty","perfName","_api","key","getZoneWith","fork","source","intercept","runGuarded","arguments","applyThis","applyArgs","invoke","error","handleError","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","scheduleTask","customSchedule","ZoneTask","microTask","customCancel","canceling","cancelTask","count","DELEGATE_ZS","onHasTask","delegate","_","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","targetZone","apply","returnTask","scheduleFn","scheduleMicroTask","isEmpty","counts","prev","next","change","_state","self","useG","call","args","_numberOfNestedTaskFrames","runTask","drainMicroTaskQueue","toState","fromState1","fromState2","handleId","toString","symbolSetTimeout","symbolPromise","symbolThen","nativeMicroTaskQueuePromise","_microTaskQueue","_isDrainingMicrotaskQueue","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","setNativePromise","NativePromise","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","__load_patch","api","getOwnPropertyDescriptor","_uncaughtPromiseErrors","e","rejection","console","message","stack","uncaughtPromiseError","shift","handleUnhandledRejection","UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL","handler","isThenable","then","forwardResolution","forwardRejection","ZoneAwarePromise","reject","symbolState","symbolValue","symbolFinally","symbolParentPromiseValue","symbolParentPromiseState","makeResolver","promise","v","resolvePromise","CURRENT_TASK_TRACE_SYMBOL","onceWrapper","wasCalled","wrappedFunction","TypeError","clearRejectedNoCatch","trace","currentTask","configurable","enumerable","writable","scheduleResolveOrReject","obj","constructor","JSON","stringify","REJECTION_HANDLED_HANDLER","chainPromise","onFulfilled","onRejected","promiseState","parentPromiseValue","isFinallyPromise","run","executor","values","res","rej","onResolve","onReject","allWithCallback","thenCallback","status","errorCallback","reason","unresolvedCount","valueIndex","resolvedValues","curValueIndex","thenErr","Symbol","toStringTag","onFinally","race","all","ZONE_AWARE_PROMISE","desc","set","NewNativePromise","symbolThenPatched","Ctor","proto","prop","originalThen","fetch","resultPromise","ctor","Promise","ObjectGetPrototypeOf","getPrototypeOf","create","ZONE_SYMBOL_ADD_EVENT_LISTENER","ZONE_SYMBOL_REMOVE_EVENT_LISTENER","ZONE_SYMBOL_PREFIX","wrap","scheduleMacroTaskWithCurrentZone","scheduleMacroTask","zoneSymbol","isWindowExists","internalWindow","_global","NULL_ON_PROP_VALUE","isPropertyWritable","propertyDesc","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames","wrapFn","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","substr","newValue","removeAttribute","onProperties","j","originalInstanceKey","className","OriginalClass","instance","patchFn","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patched","original","isDetectedIEOrEdge","ieOrEdge","isIE","ua","navigator","userAgent","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames$1","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalZoneAwareCallback","tasks","copyTasks","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","eventNameToString","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","checkIsPassive","capture","prepend","isExisting","symbolEventNames","symbolEventName","existingTasks","allRemoved","compare","diff","typeOfDelegate","blackListedEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","falseEventName","trueEventName","symbolCapture","constructorName","targetSource","scheduleEventTask","unshift","existingTask","findEventTasks","captureTasks","removeTasks","keys","match","evtName","results","foundTasks","Event","targetName","method","callbacks","nativeDelegate","opts","descriptor","windowEventNames","mediaElementEventNames","frameEventNames","frameSetEventNames","marqueeEventNames","XMLHttpRequestEventNames","IDBIndexEventNames","websocketEventNames","workerEventNames","eventNames","concat","ignoreProperties","tip","ip","targetIgnoreProperties","op","patchFilteredProperties","propertyDescriptorPatch","supportsWebSocket","WebSocket","ignoreErrorProperties","Document","Element","HTMLElement","HTMLMediaElement","HTMLFrameSetElement","HTMLBodyElement","HTMLFrameElement","HTMLIFrameElement","HTMLMarqueeElement","Worker","XMLHttpRequest","XMLHttpRequestEventTarget","IDBIndex","IDBRequest","IDBOpenDBRequest","IDBDatabase","IDBTransaction","IDBCursor","SYMBOL_BLACK_LISTED_EVENTS","SYMBOL_UNPATCHED_EVENTS","TRUE_STR","FALSE_STR","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","handle","ref","unref","id","eventTargetPatch","EVENT_TARGET","legacyPatch","blockingMethods","s","customElements","XMLHttpRequestPrototype","oriAddListener","oriRemoveListener","XMLHttpRequestEventTargetPrototype","XHR_SCHEDULED","XHR_ERROR_BEFORE_SCHEDULED","XHR_LISTENER","newListener","readyState","DONE","aborted","loadTasks","oriInvoke","XHR_TASK","sendNative","placeholderCallback","abortNative","openNative","XHR_SYNC","XHR_URL","fetchTaskAborting","fetchTaskScheduling","url","geolocation","fnNames","findPromiseRejectionHandler","PromiseRejectionEvent","evt"],"mappings":"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YACA,UACA,aACA,oBACA,QACA,OACA,UACA,gBACA,cACA,eACA,eACA,oBACA,uBACA,4BACA,mBACA,sBACA,yBACA,cACA,WACA,cACA,YACA,WACA,aACA,QACA,SACA,SACA,SACA,UACA,SACA,kBACA,cACA,OACA,OACA,UACA,SACA,UACA,aACA,eACA,cACA,YACA,aACA,WACA,mBACA,gBACA,UACA,SAoH6CC,OAbzB,CAAC,uBAAwB,mBAAoB,6BAC9C,CAAC,eAAgB,qBACf,CAAC,UAvGC,CACvB,qBAAsB,sBAAuB,mBAAoB,SAAU,mBAC3E,sBAAuB,yBAA0B,qBAAsB,kBACvE,qBAAsB,wBAAyB,oBAAqB,mBACpE,mBAAoB,UA8GuGV,EA5EjG,CAC1B,aAAc,YAAa,cAAe,OAAQ,MAAO,QAAS,YAAa,UAC/E,iBAAkB,SAAU,gBAAiB,kBAAmB,qBAChE,2BAA4B,uBAAwB,uBAG5B,CACxB,WACA,cACA,cACA,iBACA,mBACA,kBACA,eACA,aACA,gBACA,gBACA,iBACA,kBACA,cACA,eACA,iBACA,cACA,OACA,UACA,YACA,iBACA,YACA,cACA,WACA,UACA,aACA,eACA,UACA,0BACA,aACA,OACA,gBACA,6BACA,kBACA,qBACA,eACA,gBACA,iBACA,eACA,sBACA,iBACA,uBACA,kBACA,gBACA,iBACA,iBACA,iBACA,gBACA,eACA,gBACA,cACA,aACA,gCACA,mBACA,OACA,kBAgBJ,SAASrP,GAAiBhT,EAAQmb,EAAc6H,GAC5C,IAAKA,GAAgD,IAA5BA,EAAiBliB,OACtC,OAAOqa,EAEX,MAAM8H,EAAMD,EAAiBniB,OAAOqiB,GAAMA,EAAGljB,SAAWA,GACxD,IAAKijB,GAAsB,IAAfA,EAAIniB,OACZ,OAAOqa,EAEX,MAAMgI,EAAyBF,EAAI,GAAGD,iBACtC,OAAO7H,EAAata,OAAOuiB,IAA8C,IAAxCD,EAAuBtc,QAAQuc,IAEpE,SAASC,GAAwBrjB,EAAQmb,EAAc6H,EAAkB7jB,GAGhEa,GAILgS,EAAkBhS,EADSgT,GAAiBhT,EAAQmb,EAAc6H,GACpB7jB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","file":"x","sourcesContent":["/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n(function() {\n'use strict';\n\n// Exit early if we're not running in a browser.\nif (typeof window !== 'object') {\n  return;\n}\n\n// Exit early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * A local reference to the document.\n */\nvar document = window.document;\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n\n  if (parent && parent.assignedSlot) {\n    // If the parent is distributed in a <slot>, return the parent of a slot.\n    return parent.assignedSlot.parentNode;\n  }\n\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}());\n","/**\n * This file includes polyfills needed by Angular and is loaded before the app.\n * You can add your own extra polyfills to this file.\n *\n * This file is divided into 2 sections:\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\n *      file.\n *\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\n *\n * Learn more in https://angular.io/guide/browser-support\n */\n\n/***************************************************************************************************\n * BROWSER POLYFILLS\n */\n\n/** IE10 and IE11 requires the following for NgClass support on SVG elements */\n// import 'classlist.js';  // Run `npm install --save classlist.js`.\n\n/**\n * Web Animations `@angular/platform-browser/animations`\n * Only required if AnimationBuilder is used within the application and using IE/Edge or Safari.\n * Standard animation support in Angular DOES NOT require any polyfills (as of Angular 6.0).\n */\n// import 'web-animations-js';  // Run `npm install --save web-animations-js`.\n\n/**\n * By default, zone.js will patch all possible macroTask and DomEvents\n * user can disable parts of macroTask/DomEvents patch by setting following flags\n * because those flags need to be set before `zone.js` being loaded, and webpack\n * will put import in the top of bundle, so user need to create a separate file\n * in this directory (for example: zone-flags.ts), and put the following flags\n * into that file, and then add the following code before importing zone.js.\n * import './zone-flags.ts';\n *\n * The flags allowed in zone-flags.ts are listed here.\n *\n * The following flags will work for all browsers.\n *\n * (window as any).__Zone_disable_requestAnimationFrame = true; // disable patch requestAnimationFrame\n * (window as any).__Zone_disable_on_property = true; // disable patch onProperty such as onclick\n * (window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove']; // disable patch specified eventNames\n *\n *  in IE/Edge developer tools, the addEventListener will also be wrapped by zone.js\n *  with the following flag, it will bypass `zone.js` patch for IE/Edge\n *\n *  (window as any).__Zone_enable_cross_context_check = true;\n *\n */\n\n/***************************************************************************************************\n * Zone JS is required by default for Angular itself.\n */\nimport \"zone.js/dist/zone\"; // Included with Angular CLI.\nimport \"./../node_modules/intersection-observer/intersection-observer.js\";\n\n/***************************************************************************************************\n * APPLICATION IMPORTS\n */\n","/**\n * @license Angular v0.10.2\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (factory) {\n    typeof define === 'function' && define.amd ? define(factory) :\n    factory();\n}(function () { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const Zone$1 = (function (global) {\n        const performance = global['performance'];\n        function mark(name) { performance && performance['mark'] && performance['mark'](name); }\n        function performanceMeasure(name, label) {\n            performance && performance['measure'] && performance['measure'](name, label);\n        }\n        mark('Zone');\n        // Initialize before it's accessed below.\n        // __Zone_symbol_prefix global can be used to override the default zone\n        // symbol prefix with a custom one if needed.\n        const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n        function __symbol__(name) { return symbolPrefix + name; }\n        const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n        if (global['Zone']) {\n            // if global['Zone'] already exists (maybe zone.js was already loaded or\n            // some other lib also registered a global object named Zone), we may need\n            // to throw an error, but sometimes user may not want this error.\n            // For example,\n            // we have two web pages, page1 includes zone.js, page2 doesn't.\n            // and the 1st time user load page1 and page2, everything work fine,\n            // but when user load page2 again, error occurs because global['Zone'] already exists.\n            // so we add a flag to let user choose whether to throw this error or not.\n            // By default, if existing Zone is from zone.js, we will not throw the error.\n            if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n                throw new Error('Zone already loaded.');\n            }\n            else {\n                return global['Zone'];\n            }\n        }\n        class Zone {\n            constructor(parent, zoneSpec) {\n                this._parent = parent;\n                this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n                this._properties = zoneSpec && zoneSpec.properties || {};\n                this._zoneDelegate =\n                    new ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n            }\n            static assertZonePatched() {\n                if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                    throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                        'has been overwritten.\\n' +\n                        'Most likely cause is that a Promise polyfill has been loaded ' +\n                        'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                        'If you must load one, do so before loading zone.js.)');\n                }\n            }\n            static get root() {\n                let zone = Zone.current;\n                while (zone.parent) {\n                    zone = zone.parent;\n                }\n                return zone;\n            }\n            static get current() { return _currentZoneFrame.zone; }\n            static get currentTask() { return _currentTask; }\n            // tslint:disable-next-line:require-internal-with-underscore\n            static __load_patch(name, fn) {\n                if (patches.hasOwnProperty(name)) {\n                    if (checkDuplicate) {\n                        throw Error('Already loaded patch: ' + name);\n                    }\n                }\n                else if (!global['__Zone_disable_' + name]) {\n                    const perfName = 'Zone:' + name;\n                    mark(perfName);\n                    patches[name] = fn(global, Zone, _api);\n                    performanceMeasure(perfName, perfName);\n                }\n            }\n            get parent() { return this._parent; }\n            get name() { return this._name; }\n            get(key) {\n                const zone = this.getZoneWith(key);\n                if (zone)\n                    return zone._properties[key];\n            }\n            getZoneWith(key) {\n                let current = this;\n                while (current) {\n                    if (current._properties.hasOwnProperty(key)) {\n                        return current;\n                    }\n                    current = current._parent;\n                }\n                return null;\n            }\n            fork(zoneSpec) {\n                if (!zoneSpec)\n                    throw new Error('ZoneSpec required!');\n                return this._zoneDelegate.fork(this, zoneSpec);\n            }\n            wrap(callback, source) {\n                if (typeof callback !== 'function') {\n                    throw new Error('Expecting function got: ' + callback);\n                }\n                const _callback = this._zoneDelegate.intercept(this, callback, source);\n                const zone = this;\n                return function () {\n                    return zone.runGuarded(_callback, this, arguments, source);\n                };\n            }\n            run(callback, applyThis, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runGuarded(callback, applyThis = null, applyArgs, source) {\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    try {\n                        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                }\n            }\n            runTask(task, applyThis, applyArgs) {\n                if (task.zone != this) {\n                    throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                }\n                // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n                // will run in notScheduled(canceled) state, we should not try to\n                // run such kind of task but just return\n                if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                    return;\n                }\n                const reEntryGuard = task.state != running;\n                reEntryGuard && task._transitionTo(running, scheduled);\n                task.runCount++;\n                const previousTask = _currentTask;\n                _currentTask = task;\n                _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n                try {\n                    if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                        task.cancelFn = undefined;\n                    }\n                    try {\n                        return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                    }\n                    catch (error) {\n                        if (this._zoneDelegate.handleError(this, error)) {\n                            throw error;\n                        }\n                    }\n                }\n                finally {\n                    // if the task's state is notScheduled or unknown, then it has already been cancelled\n                    // we should not reset the state to scheduled\n                    if (task.state !== notScheduled && task.state !== unknown) {\n                        if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                            reEntryGuard && task._transitionTo(scheduled, running);\n                        }\n                        else {\n                            task.runCount = 0;\n                            this._updateTaskCount(task, -1);\n                            reEntryGuard &&\n                                task._transitionTo(notScheduled, running, notScheduled);\n                        }\n                    }\n                    _currentZoneFrame = _currentZoneFrame.parent;\n                    _currentTask = previousTask;\n                }\n            }\n            scheduleTask(task) {\n                if (task.zone && task.zone !== this) {\n                    // check if the task was rescheduled, the newZone\n                    // should not be the children of the original zone\n                    let newZone = this;\n                    while (newZone) {\n                        if (newZone === task.zone) {\n                            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                        }\n                        newZone = newZone.parent;\n                    }\n                }\n                task._transitionTo(scheduling, notScheduled);\n                const zoneDelegates = [];\n                task._zoneDelegates = zoneDelegates;\n                task._zone = this;\n                try {\n                    task = this._zoneDelegate.scheduleTask(this, task);\n                }\n                catch (err) {\n                    // should set task's state to unknown when scheduleTask throw error\n                    // because the err may from reschedule, so the fromState maybe notScheduled\n                    task._transitionTo(unknown, scheduling, notScheduled);\n                    // TODO: @JiaLiPassion, should we check the result from handleError?\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                if (task._zoneDelegates === zoneDelegates) {\n                    // we have to check because internally the delegate can reschedule the task.\n                    this._updateTaskCount(task, 1);\n                }\n                if (task.state == scheduling) {\n                    task._transitionTo(scheduled, scheduling);\n                }\n                return task;\n            }\n            scheduleMicroTask(source, callback, data, customSchedule) {\n                return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n            }\n            scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n            }\n            scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n                return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n            }\n            cancelTask(task) {\n                if (task.zone != this)\n                    throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                        (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n                task._transitionTo(canceling, scheduled, running);\n                try {\n                    this._zoneDelegate.cancelTask(this, task);\n                }\n                catch (err) {\n                    // if error occurs when cancelTask, transit the state to unknown\n                    task._transitionTo(unknown, canceling);\n                    this._zoneDelegate.handleError(this, err);\n                    throw err;\n                }\n                this._updateTaskCount(task, -1);\n                task._transitionTo(notScheduled, canceling);\n                task.runCount = 0;\n                return task;\n            }\n            _updateTaskCount(task, count) {\n                const zoneDelegates = task._zoneDelegates;\n                if (count == -1) {\n                    task._zoneDelegates = null;\n                }\n                for (let i = 0; i < zoneDelegates.length; i++) {\n                    zoneDelegates[i]._updateTaskCount(task.type, count);\n                }\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        Zone.__symbol__ = __symbol__;\n        const DELEGATE_ZS = {\n            name: '',\n            onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n            onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n            onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n            onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n        };\n        class ZoneDelegate {\n            constructor(zone, parentDelegate, zoneSpec) {\n                this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n                this.zone = zone;\n                this._parentDelegate = parentDelegate;\n                this._forkZS =\n                    zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n                this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n                this._forkCurrZone =\n                    zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n                this._interceptZS =\n                    zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n                this._interceptDlgt =\n                    zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n                this._interceptCurrZone =\n                    zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n                this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n                this._invokeDlgt =\n                    zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n                this._invokeCurrZone =\n                    zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n                this._handleErrorZS =\n                    zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n                this._handleErrorDlgt = zoneSpec &&\n                    (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n                this._handleErrorCurrZone =\n                    zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n                this._scheduleTaskZS =\n                    zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n                this._scheduleTaskDlgt = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n                this._scheduleTaskCurrZone = zoneSpec &&\n                    (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n                this._invokeTaskZS =\n                    zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n                this._invokeTaskDlgt =\n                    zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n                this._invokeTaskCurrZone =\n                    zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n                this._cancelTaskZS =\n                    zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n                this._cancelTaskDlgt =\n                    zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n                this._cancelTaskCurrZone =\n                    zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n                this._hasTaskZS = null;\n                this._hasTaskDlgt = null;\n                this._hasTaskDlgtOwner = null;\n                this._hasTaskCurrZone = null;\n                const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n                const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n                if (zoneSpecHasTask || parentHasTask) {\n                    // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                    // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                    this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                    this._hasTaskDlgt = parentDelegate;\n                    this._hasTaskDlgtOwner = this;\n                    this._hasTaskCurrZone = zone;\n                    if (!zoneSpec.onScheduleTask) {\n                        this._scheduleTaskZS = DELEGATE_ZS;\n                        this._scheduleTaskDlgt = parentDelegate;\n                        this._scheduleTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onInvokeTask) {\n                        this._invokeTaskZS = DELEGATE_ZS;\n                        this._invokeTaskDlgt = parentDelegate;\n                        this._invokeTaskCurrZone = this.zone;\n                    }\n                    if (!zoneSpec.onCancelTask) {\n                        this._cancelTaskZS = DELEGATE_ZS;\n                        this._cancelTaskDlgt = parentDelegate;\n                        this._cancelTaskCurrZone = this.zone;\n                    }\n                }\n            }\n            fork(targetZone, zoneSpec) {\n                return this._forkZS ?\n                    this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                    new Zone(targetZone, zoneSpec);\n            }\n            intercept(targetZone, callback, source) {\n                return this._interceptZS ?\n                    this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                    callback;\n            }\n            invoke(targetZone, callback, applyThis, applyArgs, source) {\n                return this._invokeZS ?\n                    this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                    callback.apply(applyThis, applyArgs);\n            }\n            handleError(targetZone, error) {\n                return this._handleErrorZS ?\n                    this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                    true;\n            }\n            scheduleTask(targetZone, task) {\n                let returnTask = task;\n                if (this._scheduleTaskZS) {\n                    if (this._hasTaskZS) {\n                        returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                    }\n                    // clang-format off\n                    returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                    // clang-format on\n                    if (!returnTask)\n                        returnTask = task;\n                }\n                else {\n                    if (task.scheduleFn) {\n                        task.scheduleFn(task);\n                    }\n                    else if (task.type == microTask) {\n                        scheduleMicroTask(task);\n                    }\n                    else {\n                        throw new Error('Task is missing scheduleFn.');\n                    }\n                }\n                return returnTask;\n            }\n            invokeTask(targetZone, task, applyThis, applyArgs) {\n                return this._invokeTaskZS ?\n                    this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                    task.callback.apply(applyThis, applyArgs);\n            }\n            cancelTask(targetZone, task) {\n                let value;\n                if (this._cancelTaskZS) {\n                    value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n                }\n                else {\n                    if (!task.cancelFn) {\n                        throw Error('Task is not cancelable');\n                    }\n                    value = task.cancelFn(task);\n                }\n                return value;\n            }\n            hasTask(targetZone, isEmpty) {\n                // hasTask should not throw error so other ZoneDelegate\n                // can still trigger hasTask callback\n                try {\n                    this._hasTaskZS &&\n                        this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n                }\n                catch (err) {\n                    this.handleError(targetZone, err);\n                }\n            }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _updateTaskCount(type, count) {\n                const counts = this._taskCounts;\n                const prev = counts[type];\n                const next = counts[type] = prev + count;\n                if (next < 0) {\n                    throw new Error('More tasks executed then were scheduled.');\n                }\n                if (prev == 0 || next == 0) {\n                    const isEmpty = {\n                        microTask: counts['microTask'] > 0,\n                        macroTask: counts['macroTask'] > 0,\n                        eventTask: counts['eventTask'] > 0,\n                        change: type\n                    };\n                    this.hasTask(this.zone, isEmpty);\n                }\n            }\n        }\n        class ZoneTask {\n            constructor(type, source, callback, options, scheduleFn, cancelFn) {\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zone = null;\n                this.runCount = 0;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._zoneDelegates = null;\n                // tslint:disable-next-line:require-internal-with-underscore\n                this._state = 'notScheduled';\n                this.type = type;\n                this.source = source;\n                this.data = options;\n                this.scheduleFn = scheduleFn;\n                this.cancelFn = cancelFn;\n                if (!callback) {\n                    throw new Error('callback is not defined');\n                }\n                this.callback = callback;\n                const self = this;\n                // TODO: @JiaLiPassion options should have interface\n                if (type === eventTask && options && options.useG) {\n                    this.invoke = ZoneTask.invokeTask;\n                }\n                else {\n                    this.invoke = function () {\n                        return ZoneTask.invokeTask.call(global, self, this, arguments);\n                    };\n                }\n            }\n            static invokeTask(task, target, args) {\n                if (!task) {\n                    task = this;\n                }\n                _numberOfNestedTaskFrames++;\n                try {\n                    task.runCount++;\n                    return task.zone.runTask(task, target, args);\n                }\n                finally {\n                    if (_numberOfNestedTaskFrames == 1) {\n                        drainMicroTaskQueue();\n                    }\n                    _numberOfNestedTaskFrames--;\n                }\n            }\n            get zone() { return this._zone; }\n            get state() { return this._state; }\n            cancelScheduleRequest() { this._transitionTo(notScheduled, scheduling); }\n            // tslint:disable-next-line:require-internal-with-underscore\n            _transitionTo(toState, fromState1, fromState2) {\n                if (this._state === fromState1 || this._state === fromState2) {\n                    this._state = toState;\n                    if (toState == notScheduled) {\n                        this._zoneDelegates = null;\n                    }\n                }\n                else {\n                    throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n                }\n            }\n            toString() {\n                if (this.data && typeof this.data.handleId !== 'undefined') {\n                    return this.data.handleId.toString();\n                }\n                else {\n                    return Object.prototype.toString.call(this);\n                }\n            }\n            // add toJSON method to prevent cyclic error when\n            // call JSON.stringify(zoneTask)\n            toJSON() {\n                return {\n                    type: this.type,\n                    state: this.state,\n                    source: this.source,\n                    zone: this.zone.name,\n                    runCount: this.runCount\n                };\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  MICROTASK QUEUE\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const symbolSetTimeout = __symbol__('setTimeout');\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        let _microTaskQueue = [];\n        let _isDrainingMicrotaskQueue = false;\n        let nativeMicroTaskQueuePromise;\n        function scheduleMicroTask(task) {\n            // if we are not running in any task, and there has not been anything scheduled\n            // we must bootstrap the initial task creation by manually scheduling the drain\n            if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n                // We are not running in Task, so we need to kickstart the microtask queue.\n                if (!nativeMicroTaskQueuePromise) {\n                    if (global[symbolPromise]) {\n                        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n                    }\n                }\n                if (nativeMicroTaskQueuePromise) {\n                    let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n                    if (!nativeThen) {\n                        // native Promise is not patchable, we need to use `then` directly\n                        // issue 1078\n                        nativeThen = nativeMicroTaskQueuePromise['then'];\n                    }\n                    nativeThen.call(nativeMicroTaskQueuePromise, drainMicroTaskQueue);\n                }\n                else {\n                    global[symbolSetTimeout](drainMicroTaskQueue, 0);\n                }\n            }\n            task && _microTaskQueue.push(task);\n        }\n        function drainMicroTaskQueue() {\n            if (!_isDrainingMicrotaskQueue) {\n                _isDrainingMicrotaskQueue = true;\n                while (_microTaskQueue.length) {\n                    const queue = _microTaskQueue;\n                    _microTaskQueue = [];\n                    for (let i = 0; i < queue.length; i++) {\n                        const task = queue[i];\n                        try {\n                            task.zone.runTask(task, null, null);\n                        }\n                        catch (error) {\n                            _api.onUnhandledError(error);\n                        }\n                    }\n                }\n                _api.microtaskDrainDone();\n                _isDrainingMicrotaskQueue = false;\n            }\n        }\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        ///  BOOTSTRAP\n        //////////////////////////////////////////////////////\n        //////////////////////////////////////////////////////\n        const NO_ZONE = { name: 'NO ZONE' };\n        const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n        const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n        const patches = {};\n        const _api = {\n            symbol: __symbol__,\n            currentZoneFrame: () => _currentZoneFrame,\n            onUnhandledError: noop,\n            microtaskDrainDone: noop,\n            scheduleMicroTask: scheduleMicroTask,\n            showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n            patchEventTarget: () => [],\n            patchOnProperties: noop,\n            patchMethod: () => noop,\n            bindArguments: () => [],\n            patchThen: () => noop,\n            patchMacroTask: () => noop,\n            setNativePromise: (NativePromise) => {\n                // sometimes NativePromise.resolve static function\n                // is not ready yet, (such as core-js/es6.promise)\n                // so we need to check here.\n                if (NativePromise && typeof NativePromise.resolve === 'function') {\n                    nativeMicroTaskQueuePromise = NativePromise.resolve(0);\n                }\n            },\n            patchEventPrototype: () => noop,\n            isIEOrEdge: () => false,\n            getGlobalObjects: () => undefined,\n            ObjectDefineProperty: () => noop,\n            ObjectGetOwnPropertyDescriptor: () => undefined,\n            ObjectCreate: () => undefined,\n            ArraySlice: () => [],\n            patchClass: () => noop,\n            wrapWithCurrentZone: () => noop,\n            filterProperties: () => [],\n            attachOriginToPatched: () => noop,\n            _redefineProperty: () => noop,\n            patchCallbacks: () => noop\n        };\n        let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n        let _currentTask = null;\n        let _numberOfNestedTaskFrames = 0;\n        function noop() { }\n        performanceMeasure('Zone', 'Zone');\n        return global['Zone'] = Zone;\n    })(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n        const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n        const ObjectDefineProperty = Object.defineProperty;\n        function readableObjectToString(obj) {\n            if (obj && obj.toString === Object.prototype.toString) {\n                const className = obj.constructor && obj.constructor.name;\n                return (className ? className : '') + ': ' + JSON.stringify(obj);\n            }\n            return obj ? obj.toString() : Object.prototype.toString.call(obj);\n        }\n        const __symbol__ = api.symbol;\n        const _uncaughtPromiseErrors = [];\n        const symbolPromise = __symbol__('Promise');\n        const symbolThen = __symbol__('then');\n        const creationTrace = '__creationTrace__';\n        api.onUnhandledError = (e) => {\n            if (api.showUncaughtError()) {\n                const rejection = e && e.rejection;\n                if (rejection) {\n                    console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n                }\n                else {\n                    console.error(e);\n                }\n            }\n        };\n        api.microtaskDrainDone = () => {\n            while (_uncaughtPromiseErrors.length) {\n                while (_uncaughtPromiseErrors.length) {\n                    const uncaughtPromiseError = _uncaughtPromiseErrors.shift();\n                    try {\n                        uncaughtPromiseError.zone.runGuarded(() => { throw uncaughtPromiseError; });\n                    }\n                    catch (error) {\n                        handleUnhandledRejection(error);\n                    }\n                }\n            }\n        };\n        const UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL = __symbol__('unhandledPromiseRejectionHandler');\n        function handleUnhandledRejection(e) {\n            api.onUnhandledError(e);\n            try {\n                const handler = Zone[UNHANDLED_PROMISE_REJECTION_HANDLER_SYMBOL];\n                if (handler && typeof handler === 'function') {\n                    handler.call(this, e);\n                }\n            }\n            catch (err) {\n            }\n        }\n        function isThenable(value) { return value && value.then; }\n        function forwardResolution(value) { return value; }\n        function forwardRejection(rejection) { return ZoneAwarePromise.reject(rejection); }\n        const symbolState = __symbol__('state');\n        const symbolValue = __symbol__('value');\n        const symbolFinally = __symbol__('finally');\n        const symbolParentPromiseValue = __symbol__('parentPromiseValue');\n        const symbolParentPromiseState = __symbol__('parentPromiseState');\n        const source = 'Promise.then';\n        const UNRESOLVED = null;\n        const RESOLVED = true;\n        const REJECTED = false;\n        const REJECTED_NO_CATCH = 0;\n        function makeResolver(promise, state) {\n            return (v) => {\n                try {\n                    resolvePromise(promise, state, v);\n                }\n                catch (err) {\n                    resolvePromise(promise, false, err);\n                }\n                // Do not return value or you will break the Promise spec.\n            };\n        }\n        const once = function () {\n            let wasCalled = false;\n            return function wrapper(wrappedFunction) {\n                return function () {\n                    if (wasCalled) {\n                        return;\n                    }\n                    wasCalled = true;\n                    wrappedFunction.apply(null, arguments);\n                };\n            };\n        };\n        const TYPE_ERROR = 'Promise resolved with itself';\n        const CURRENT_TASK_TRACE_SYMBOL = __symbol__('currentTaskTrace');\n        // Promise Resolution\n        function resolvePromise(promise, state, value) {\n            const onceWrapper = once();\n            if (promise === value) {\n                throw new TypeError(TYPE_ERROR);\n            }\n            if (promise[symbolState] === UNRESOLVED) {\n                // should only get value.then once based on promise spec.\n                let then = null;\n                try {\n                    if (typeof value === 'object' || typeof value === 'function') {\n                        then = value && value.then;\n                    }\n                }\n                catch (err) {\n                    onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    return promise;\n                }\n                // if (value instanceof ZoneAwarePromise) {\n                if (state !== REJECTED && value instanceof ZoneAwarePromise &&\n                    value.hasOwnProperty(symbolState) && value.hasOwnProperty(symbolValue) &&\n                    value[symbolState] !== UNRESOLVED) {\n                    clearRejectedNoCatch(value);\n                    resolvePromise(promise, value[symbolState], value[symbolValue]);\n                }\n                else if (state !== REJECTED && typeof then === 'function') {\n                    try {\n                        then.call(value, onceWrapper(makeResolver(promise, state)), onceWrapper(makeResolver(promise, false)));\n                    }\n                    catch (err) {\n                        onceWrapper(() => { resolvePromise(promise, false, err); })();\n                    }\n                }\n                else {\n                    promise[symbolState] = state;\n                    const queue = promise[symbolValue];\n                    promise[symbolValue] = value;\n                    if (promise[symbolFinally] === symbolFinally) {\n                        // the promise is generated by Promise.prototype.finally\n                        if (state === RESOLVED) {\n                            // the state is resolved, should ignore the value\n                            // and use parent promise value\n                            promise[symbolState] = promise[symbolParentPromiseState];\n                            promise[symbolValue] = promise[symbolParentPromiseValue];\n                        }\n                    }\n                    // record task information in value when error occurs, so we can\n                    // do some additional work such as render longStackTrace\n                    if (state === REJECTED && value instanceof Error) {\n                        // check if longStackTraceZone is here\n                        const trace = Zone.currentTask && Zone.currentTask.data &&\n                            Zone.currentTask.data[creationTrace];\n                        if (trace) {\n                            // only keep the long stack trace into error when in longStackTraceZone\n                            ObjectDefineProperty(value, CURRENT_TASK_TRACE_SYMBOL, { configurable: true, enumerable: false, writable: true, value: trace });\n                        }\n                    }\n                    for (let i = 0; i < queue.length;) {\n                        scheduleResolveOrReject(promise, queue[i++], queue[i++], queue[i++], queue[i++]);\n                    }\n                    if (queue.length == 0 && state == REJECTED) {\n                        promise[symbolState] = REJECTED_NO_CATCH;\n                        try {\n                            // try to print more readable error log\n                            throw new Error('Uncaught (in promise): ' + readableObjectToString(value) +\n                                (value && value.stack ? '\\n' + value.stack : ''));\n                        }\n                        catch (err) {\n                            const error = err;\n                            error.rejection = value;\n                            error.promise = promise;\n                            error.zone = Zone.current;\n                            error.task = Zone.currentTask;\n                            _uncaughtPromiseErrors.push(error);\n                            api.scheduleMicroTask(); // to make sure that it is running\n                        }\n                    }\n                }\n            }\n            // Resolving an already resolved promise is a noop.\n            return promise;\n        }\n        const REJECTION_HANDLED_HANDLER = __symbol__('rejectionHandledHandler');\n        function clearRejectedNoCatch(promise) {\n            if (promise[symbolState] === REJECTED_NO_CATCH) {\n                // if the promise is rejected no catch status\n                // and queue.length > 0, means there is a error handler\n                // here to handle the rejected promise, we should trigger\n                // windows.rejectionhandled eventHandler or nodejs rejectionHandled\n                // eventHandler\n                try {\n                    const handler = Zone[REJECTION_HANDLED_HANDLER];\n                    if (handler && typeof handler === 'function') {\n                        handler.call(this, { rejection: promise[symbolValue], promise: promise });\n                    }\n                }\n                catch (err) {\n                }\n                promise[symbolState] = REJECTED;\n                for (let i = 0; i < _uncaughtPromiseErrors.length; i++) {\n                    if (promise === _uncaughtPromiseErrors[i].promise) {\n                        _uncaughtPromiseErrors.splice(i, 1);\n                    }\n                }\n            }\n        }\n        function scheduleResolveOrReject(promise, zone, chainPromise, onFulfilled, onRejected) {\n            clearRejectedNoCatch(promise);\n            const promiseState = promise[symbolState];\n            const delegate = promiseState ?\n                (typeof onFulfilled === 'function') ? onFulfilled : forwardResolution :\n                (typeof onRejected === 'function') ? onRejected : forwardRejection;\n            zone.scheduleMicroTask(source, () => {\n                try {\n                    const parentPromiseValue = promise[symbolValue];\n                    const isFinallyPromise = !!chainPromise && symbolFinally === chainPromise[symbolFinally];\n                    if (isFinallyPromise) {\n                        // if the promise is generated from finally call, keep parent promise's state and value\n                        chainPromise[symbolParentPromiseValue] = parentPromiseValue;\n                        chainPromise[symbolParentPromiseState] = promiseState;\n                    }\n                    // should not pass value to finally callback\n                    const value = zone.run(delegate, undefined, isFinallyPromise && delegate !== forwardRejection && delegate !== forwardResolution ?\n                        [] :\n                        [parentPromiseValue]);\n                    resolvePromise(chainPromise, true, value);\n                }\n                catch (error) {\n                    // if error occurs, should always return this error\n                    resolvePromise(chainPromise, false, error);\n                }\n            }, chainPromise);\n        }\n        const ZONE_AWARE_PROMISE_TO_STRING = 'function ZoneAwarePromise() { [native code] }';\n        class ZoneAwarePromise {\n            constructor(executor) {\n                const promise = this;\n                if (!(promise instanceof ZoneAwarePromise)) {\n                    throw new Error('Must be an instanceof Promise.');\n                }\n                promise[symbolState] = UNRESOLVED;\n                promise[symbolValue] = []; // queue;\n                try {\n                    executor && executor(makeResolver(promise, RESOLVED), makeResolver(promise, REJECTED));\n                }\n                catch (error) {\n                    resolvePromise(promise, false, error);\n                }\n            }\n            static toString() { return ZONE_AWARE_PROMISE_TO_STRING; }\n            static resolve(value) {\n                return resolvePromise(new this(null), RESOLVED, value);\n            }\n            static reject(error) {\n                return resolvePromise(new this(null), REJECTED, error);\n            }\n            static race(values) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                function onResolve(value) { resolve(value); }\n                function onReject(error) { reject(error); }\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    value.then(onResolve, onReject);\n                }\n                return promise;\n            }\n            static all(values) { return ZoneAwarePromise.allWithCallback(values); }\n            static allSettled(values) {\n                const P = this && this.prototype instanceof ZoneAwarePromise ? this : ZoneAwarePromise;\n                return P.allWithCallback(values, {\n                    thenCallback: (value) => ({ status: 'fulfilled', value }),\n                    errorCallback: (err) => ({ status: 'rejected', reason: err })\n                });\n            }\n            static allWithCallback(values, callback) {\n                let resolve;\n                let reject;\n                let promise = new this((res, rej) => {\n                    resolve = res;\n                    reject = rej;\n                });\n                // Start at 2 to prevent prematurely resolving if .then is called immediately.\n                let unresolvedCount = 2;\n                let valueIndex = 0;\n                const resolvedValues = [];\n                for (let value of values) {\n                    if (!isThenable(value)) {\n                        value = this.resolve(value);\n                    }\n                    const curValueIndex = valueIndex;\n                    try {\n                        value.then((value) => {\n                            resolvedValues[curValueIndex] = callback ? callback.thenCallback(value) : value;\n                            unresolvedCount--;\n                            if (unresolvedCount === 0) {\n                                resolve(resolvedValues);\n                            }\n                        }, (err) => {\n                            if (!callback) {\n                                reject(err);\n                            }\n                            else {\n                                resolvedValues[curValueIndex] = callback.errorCallback(err);\n                                unresolvedCount--;\n                                if (unresolvedCount === 0) {\n                                    resolve(resolvedValues);\n                                }\n                            }\n                        });\n                    }\n                    catch (thenErr) {\n                        reject(thenErr);\n                    }\n                    unresolvedCount++;\n                    valueIndex++;\n                }\n                // Make the unresolvedCount zero-based again.\n                unresolvedCount -= 2;\n                if (unresolvedCount === 0) {\n                    resolve(resolvedValues);\n                }\n                return promise;\n            }\n            get [Symbol.toStringTag]() { return 'Promise'; }\n            then(onFulfilled, onRejected) {\n                const chainPromise = new this.constructor(null);\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFulfilled, onRejected);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFulfilled, onRejected);\n                }\n                return chainPromise;\n            }\n            catch(onRejected) {\n                return this.then(null, onRejected);\n            }\n            finally(onFinally) {\n                const chainPromise = new this.constructor(null);\n                chainPromise[symbolFinally] = symbolFinally;\n                const zone = Zone.current;\n                if (this[symbolState] == UNRESOLVED) {\n                    this[symbolValue].push(zone, chainPromise, onFinally, onFinally);\n                }\n                else {\n                    scheduleResolveOrReject(this, zone, chainPromise, onFinally, onFinally);\n                }\n                return chainPromise;\n            }\n        }\n        // Protect against aggressive optimizers dropping seemingly unused properties.\n        // E.g. Closure Compiler in advanced mode.\n        ZoneAwarePromise['resolve'] = ZoneAwarePromise.resolve;\n        ZoneAwarePromise['reject'] = ZoneAwarePromise.reject;\n        ZoneAwarePromise['race'] = ZoneAwarePromise.race;\n        ZoneAwarePromise['all'] = ZoneAwarePromise.all;\n        const NativePromise = global[symbolPromise] = global['Promise'];\n        const ZONE_AWARE_PROMISE = Zone.__symbol__('ZoneAwarePromise');\n        let desc = ObjectGetOwnPropertyDescriptor(global, 'Promise');\n        if (!desc || desc.configurable) {\n            desc && delete desc.writable;\n            desc && delete desc.value;\n            if (!desc) {\n                desc = { configurable: true, enumerable: true };\n            }\n            desc.get = function () {\n                // if we already set ZoneAwarePromise, use patched one\n                // otherwise return native one.\n                return global[ZONE_AWARE_PROMISE] ? global[ZONE_AWARE_PROMISE] : global[symbolPromise];\n            };\n            desc.set = function (NewNativePromise) {\n                if (NewNativePromise === ZoneAwarePromise) {\n                    // if the NewNativePromise is ZoneAwarePromise\n                    // save to global\n                    global[ZONE_AWARE_PROMISE] = NewNativePromise;\n                }\n                else {\n                    // if the NewNativePromise is not ZoneAwarePromise\n                    // for example: after load zone.js, some library just\n                    // set es6-promise to global, if we set it to global\n                    // directly, assertZonePatched will fail and angular\n                    // will not loaded, so we just set the NewNativePromise\n                    // to global[symbolPromise], so the result is just like\n                    // we load ES6 Promise before zone.js\n                    global[symbolPromise] = NewNativePromise;\n                    if (!NewNativePromise.prototype[symbolThen]) {\n                        patchThen(NewNativePromise);\n                    }\n                    api.setNativePromise(NewNativePromise);\n                }\n            };\n            ObjectDefineProperty(global, 'Promise', desc);\n        }\n        global['Promise'] = ZoneAwarePromise;\n        const symbolThenPatched = __symbol__('thenPatched');\n        function patchThen(Ctor) {\n            const proto = Ctor.prototype;\n            const prop = ObjectGetOwnPropertyDescriptor(proto, 'then');\n            if (prop && (prop.writable === false || !prop.configurable)) {\n                // check Ctor.prototype.then propertyDescriptor is writable or not\n                // in meteor env, writable is false, we should ignore such case\n                return;\n            }\n            const originalThen = proto.then;\n            // Keep a reference to the original method.\n            proto[symbolThen] = originalThen;\n            Ctor.prototype.then = function (onResolve, onReject) {\n                const wrapped = new ZoneAwarePromise((resolve, reject) => { originalThen.call(this, resolve, reject); });\n                return wrapped.then(onResolve, onReject);\n            };\n            Ctor[symbolThenPatched] = true;\n        }\n        api.patchThen = patchThen;\n        function zoneify(fn) {\n            return function () {\n                let resultPromise = fn.apply(this, arguments);\n                if (resultPromise instanceof ZoneAwarePromise) {\n                    return resultPromise;\n                }\n                let ctor = resultPromise.constructor;\n                if (!ctor[symbolThenPatched]) {\n                    patchThen(ctor);\n                }\n                return resultPromise;\n            };\n        }\n        if (NativePromise) {\n            patchThen(NativePromise);\n            const fetch = global['fetch'];\n            if (typeof fetch == 'function') {\n                global[api.symbol('fetch')] = fetch;\n                global['fetch'] = zoneify(fetch);\n            }\n        }\n        // This is not part of public API, but it is useful for tests, so we expose it.\n        Promise[Zone.__symbol__('uncaughtPromiseErrors')] = _uncaughtPromiseErrors;\n        return ZoneAwarePromise;\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Suppress closure compiler errors about unknown 'Zone' variable\n     * @fileoverview\n     * @suppress {undefinedVars,globalThis,missingRequire}\n     */\n    /// <reference types=\"node\"/>\n    // issue #989, to reduce bundle size, use short name\n    /** Object.getOwnPropertyDescriptor */\n    const ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    /** Object.defineProperty */\n    const ObjectDefineProperty = Object.defineProperty;\n    /** Object.getPrototypeOf */\n    const ObjectGetPrototypeOf = Object.getPrototypeOf;\n    /** Object.create */\n    const ObjectCreate = Object.create;\n    /** Array.prototype.slice */\n    const ArraySlice = Array.prototype.slice;\n    /** addEventListener string const */\n    const ADD_EVENT_LISTENER_STR = 'addEventListener';\n    /** removeEventListener string const */\n    const REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n    /** zoneSymbol addEventListener */\n    const ZONE_SYMBOL_ADD_EVENT_LISTENER = Zone.__symbol__(ADD_EVENT_LISTENER_STR);\n    /** zoneSymbol removeEventListener */\n    const ZONE_SYMBOL_REMOVE_EVENT_LISTENER = Zone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n    /** true string const */\n    const TRUE_STR = 'true';\n    /** false string const */\n    const FALSE_STR = 'false';\n    /** Zone symbol prefix string const. */\n    const ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\n    function wrapWithCurrentZone(callback, source) {\n        return Zone.current.wrap(callback, source);\n    }\n    function scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n        return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n    }\n    const zoneSymbol = Zone.__symbol__;\n    const isWindowExists = typeof window !== 'undefined';\n    const internalWindow = isWindowExists ? window : undefined;\n    const _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\n    const REMOVE_ATTRIBUTE = 'removeAttribute';\n    const NULL_ON_PROP_VALUE = [null];\n    function bindArguments(args, source) {\n        for (let i = args.length - 1; i >= 0; i--) {\n            if (typeof args[i] === 'function') {\n                args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n            }\n        }\n        return args;\n    }\n    function patchPrototype(prototype, fnNames) {\n        const source = prototype.constructor['name'];\n        for (let i = 0; i < fnNames.length; i++) {\n            const name = fnNames[i];\n            const delegate = prototype[name];\n            if (delegate) {\n                const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, name);\n                if (!isPropertyWritable(prototypeDesc)) {\n                    continue;\n                }\n                prototype[name] = ((delegate) => {\n                    const patched = function () {\n                        return delegate.apply(this, bindArguments(arguments, source + '.' + name));\n                    };\n                    attachOriginToPatched(patched, delegate);\n                    return patched;\n                })(delegate);\n            }\n        }\n    }\n    function isPropertyWritable(propertyDesc) {\n        if (!propertyDesc) {\n            return true;\n        }\n        if (propertyDesc.writable === false) {\n            return false;\n        }\n        return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n    }\n    const isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]');\n    const isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n    // we are in electron of nw, so we are both browser and nodejs\n    // Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n    // this code.\n    const isMix = typeof _global.process !== 'undefined' &&\n        {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n        !!(isWindowExists && internalWindow['HTMLElement']);\n    const zoneSymbolEventNames = {};\n    const wrapFn = function (event) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        let eventNameSymbol = zoneSymbolEventNames[event.type];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n        }\n        const target = this || event.target || _global;\n        const listener = target[eventNameSymbol];\n        let result;\n        if (isBrowser && target === internalWindow && event.type === 'error') {\n            // window.onerror have different signiture\n            // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n            // and onerror callback will prevent default when callback return true\n            const errorEvent = event;\n            result = listener &&\n                listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n            if (result === true) {\n                event.preventDefault();\n            }\n        }\n        else {\n            result = listener && listener.apply(this, arguments);\n            if (result != undefined && !result) {\n                event.preventDefault();\n            }\n        }\n        return result;\n    };\n    function patchProperty(obj, prop, prototype) {\n        let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n        if (!desc && prototype) {\n            // when patch window object, use prototype to check prop exist or not\n            const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n            if (prototypeDesc) {\n                desc = { enumerable: true, configurable: true };\n            }\n        }\n        // if the descriptor not exists or is not configurable\n        // just return\n        if (!desc || !desc.configurable) {\n            return;\n        }\n        const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n        if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n            return;\n        }\n        // A property descriptor cannot have getter/setter and be writable\n        // deleting the writable and value properties avoids this error:\n        //\n        // TypeError: property descriptors must not specify a value or be writable when a\n        // getter or setter has been specified\n        delete desc.writable;\n        delete desc.value;\n        const originalDescGet = desc.get;\n        const originalDescSet = desc.set;\n        // substr(2) cuz 'onclick' -> 'click', etc\n        const eventName = prop.substr(2);\n        let eventNameSymbol = zoneSymbolEventNames[eventName];\n        if (!eventNameSymbol) {\n            eventNameSymbol = zoneSymbolEventNames[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n        }\n        desc.set = function (newValue) {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return;\n            }\n            let previousValue = target[eventNameSymbol];\n            if (previousValue) {\n                target.removeEventListener(eventName, wrapFn);\n            }\n            // issue #978, when onload handler was added before loading zone.js\n            // we should remove it with originalDescSet\n            if (originalDescSet) {\n                originalDescSet.apply(target, NULL_ON_PROP_VALUE);\n            }\n            if (typeof newValue === 'function') {\n                target[eventNameSymbol] = newValue;\n                target.addEventListener(eventName, wrapFn, false);\n            }\n            else {\n                target[eventNameSymbol] = null;\n            }\n        };\n        // The getter would return undefined for unassigned properties but the default value of an\n        // unassigned property is null\n        desc.get = function () {\n            // in some of windows's onproperty callback, this is undefined\n            // so we need to check it\n            let target = this;\n            if (!target && obj === _global) {\n                target = _global;\n            }\n            if (!target) {\n                return null;\n            }\n            const listener = target[eventNameSymbol];\n            if (listener) {\n                return listener;\n            }\n            else if (originalDescGet) {\n                // result will be null when use inline event attribute,\n                // such as <button onclick=\"func();\">OK</button>\n                // because the onclick function is internal raw uncompiled handler\n                // the onclick will be evaluated when first time event was triggered or\n                // the property is accessed, https://github.com/angular/zone.js/issues/525\n                // so we should use original native get to retrieve the handler\n                let value = originalDescGet && originalDescGet.call(this);\n                if (value) {\n                    desc.set.call(this, value);\n                    if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                        target.removeAttribute(prop);\n                    }\n                    return value;\n                }\n            }\n            return null;\n        };\n        ObjectDefineProperty(obj, prop, desc);\n        obj[onPropPatchedSymbol] = true;\n    }\n    function patchOnProperties(obj, properties, prototype) {\n        if (properties) {\n            for (let i = 0; i < properties.length; i++) {\n                patchProperty(obj, 'on' + properties[i], prototype);\n            }\n        }\n        else {\n            const onProperties = [];\n            for (const prop in obj) {\n                if (prop.substr(0, 2) == 'on') {\n                    onProperties.push(prop);\n                }\n            }\n            for (let j = 0; j < onProperties.length; j++) {\n                patchProperty(obj, onProperties[j], prototype);\n            }\n        }\n    }\n    const originalInstanceKey = zoneSymbol('originalInstance');\n    // wrap some native API on `window`\n    function patchClass(className) {\n        const OriginalClass = _global[className];\n        if (!OriginalClass)\n            return;\n        // keep original class in global\n        _global[zoneSymbol(className)] = OriginalClass;\n        _global[className] = function () {\n            const a = bindArguments(arguments, className);\n            switch (a.length) {\n                case 0:\n                    this[originalInstanceKey] = new OriginalClass();\n                    break;\n                case 1:\n                    this[originalInstanceKey] = new OriginalClass(a[0]);\n                    break;\n                case 2:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1]);\n                    break;\n                case 3:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);\n                    break;\n                case 4:\n                    this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);\n                    break;\n                default:\n                    throw new Error('Arg list too long.');\n            }\n        };\n        // attach original delegate to patched function\n        attachOriginToPatched(_global[className], OriginalClass);\n        const instance = new OriginalClass(function () { });\n        let prop;\n        for (prop in instance) {\n            // https://bugs.webkit.org/show_bug.cgi?id=44721\n            if (className === 'XMLHttpRequest' && prop === 'responseBlob')\n                continue;\n            (function (prop) {\n                if (typeof instance[prop] === 'function') {\n                    _global[className].prototype[prop] = function () {\n                        return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);\n                    };\n                }\n                else {\n                    ObjectDefineProperty(_global[className].prototype, prop, {\n                        set: function (fn) {\n                            if (typeof fn === 'function') {\n                                this[originalInstanceKey][prop] = wrapWithCurrentZone(fn, className + '.' + prop);\n                                // keep callback in wrapped function so we can\n                                // use it in Function.prototype.toString to return\n                                // the native one.\n                                attachOriginToPatched(this[originalInstanceKey][prop], fn);\n                            }\n                            else {\n                                this[originalInstanceKey][prop] = fn;\n                            }\n                        },\n                        get: function () { return this[originalInstanceKey][prop]; }\n                    });\n                }\n            }(prop));\n        }\n        for (prop in OriginalClass) {\n            if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {\n                _global[className][prop] = OriginalClass[prop];\n            }\n        }\n    }\n    function copySymbolProperties(src, dest) {\n        if (typeof Object.getOwnPropertySymbols !== 'function') {\n            return;\n        }\n        const symbols = Object.getOwnPropertySymbols(src);\n        symbols.forEach((symbol) => {\n            const desc = Object.getOwnPropertyDescriptor(src, symbol);\n            Object.defineProperty(dest, symbol, {\n                get: function () { return src[symbol]; },\n                set: function (value) {\n                    if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                        // if src[symbol] is not writable or not have a setter, just return\n                        return;\n                    }\n                    src[symbol] = value;\n                },\n                enumerable: desc ? desc.enumerable : true,\n                configurable: desc ? desc.configurable : true\n            });\n        });\n    }\n    let shouldCopySymbolProperties = false;\n    function patchMethod(target, name, patchFn) {\n        let proto = target;\n        while (proto && !proto.hasOwnProperty(name)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && target[name]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = target;\n        }\n        const delegateName = zoneSymbol(name);\n        let delegate = null;\n        if (proto && !(delegate = proto[delegateName])) {\n            delegate = proto[delegateName] = proto[name];\n            // check whether proto[name] is writable\n            // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n            const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n            if (isPropertyWritable(desc)) {\n                const patchDelegate = patchFn(delegate, delegateName, name);\n                proto[name] = function () { return patchDelegate(this, arguments); };\n                attachOriginToPatched(proto[name], delegate);\n                if (shouldCopySymbolProperties) {\n                    copySymbolProperties(delegate, proto[name]);\n                }\n            }\n        }\n        return delegate;\n    }\n    // TODO: @JiaLiPassion, support cancel task later if necessary\n    function patchMacroTask(obj, funcName, metaCreator) {\n        let setNative = null;\n        function scheduleTask(task) {\n            const data = task.data;\n            data.args[data.cbIdx] = function () { task.invoke.apply(this, arguments); };\n            setNative.apply(data.target, data.args);\n            return task;\n        }\n        setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n            const meta = metaCreator(self, args);\n            if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n                return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(self, args);\n            }\n        });\n    }\n    function attachOriginToPatched(patched, original) {\n        patched[zoneSymbol('OriginalDelegate')] = original;\n    }\n    let isDetectedIEOrEdge = false;\n    let ieOrEdge = false;\n    function isIE() {\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1) {\n                return true;\n            }\n        }\n        catch (error) {\n        }\n        return false;\n    }\n    function isIEOrEdge() {\n        if (isDetectedIEOrEdge) {\n            return ieOrEdge;\n        }\n        isDetectedIEOrEdge = true;\n        try {\n            const ua = internalWindow.navigator.userAgent;\n            if (ua.indexOf('MSIE ') !== -1 || ua.indexOf('Trident/') !== -1 || ua.indexOf('Edge/') !== -1) {\n                ieOrEdge = true;\n            }\n        }\n        catch (error) {\n        }\n        return ieOrEdge;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // override Function.prototype.toString to make zone.js patched function\n    // look like native function\n    Zone.__load_patch('toString', (global) => {\n        // patch Func.prototype.toString to let them look like native\n        const originalFunctionToString = Function.prototype.toString;\n        const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n        const PROMISE_SYMBOL = zoneSymbol('Promise');\n        const ERROR_SYMBOL = zoneSymbol('Error');\n        const newFunctionToString = function toString() {\n            if (typeof this === 'function') {\n                const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n                if (originalDelegate) {\n                    if (typeof originalDelegate === 'function') {\n                        return originalFunctionToString.call(originalDelegate);\n                    }\n                    else {\n                        return Object.prototype.toString.call(originalDelegate);\n                    }\n                }\n                if (this === Promise) {\n                    const nativePromise = global[PROMISE_SYMBOL];\n                    if (nativePromise) {\n                        return originalFunctionToString.call(nativePromise);\n                    }\n                }\n                if (this === Error) {\n                    const nativeError = global[ERROR_SYMBOL];\n                    if (nativeError) {\n                        return originalFunctionToString.call(nativeError);\n                    }\n                }\n            }\n            return originalFunctionToString.call(this);\n        };\n        newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n        Function.prototype.toString = newFunctionToString;\n        // patch Object.prototype.toString to let them look like native\n        const originalObjectToString = Object.prototype.toString;\n        const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n        Object.prototype.toString = function () {\n            if (this instanceof Promise) {\n                return PROMISE_OBJECT_TO_STRING;\n            }\n            return originalObjectToString.call(this);\n        };\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    let passiveSupported = false;\n    if (typeof window !== 'undefined') {\n        try {\n            const options = Object.defineProperty({}, 'passive', { get: function () { passiveSupported = true; } });\n            window.addEventListener('test', options, options);\n            window.removeEventListener('test', options, options);\n        }\n        catch (err) {\n            passiveSupported = false;\n        }\n    }\n    // an identifier to tell ZoneTask do not create a new invoke closure\n    const OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n        useG: true\n    };\n    const zoneSymbolEventNames$1 = {};\n    const globalSources = {};\n    const EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\n    const IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\n    function patchEventTarget(_global, apis, patchOptions) {\n        const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n        const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n        const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n        const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n        const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n        const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n        const PREPEND_EVENT_LISTENER = 'prependListener';\n        const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n        const invokeTask = function (task, target, event) {\n            // for better performance, check isRemoved which is set\n            // by removeEventListener\n            if (task.isRemoved) {\n                return;\n            }\n            const delegate = task.callback;\n            if (typeof delegate === 'object' && delegate.handleEvent) {\n                // create the bind version of handleEvent when invoke\n                task.callback = (event) => delegate.handleEvent(event);\n                task.originalDelegate = delegate;\n            }\n            // invoke static task.invoke\n            task.invoke(task, target, [event]);\n            const options = task.options;\n            if (options && typeof options === 'object' && options.once) {\n                // if options.once is true, after invoke once remove listener here\n                // only browser need to do this, nodejs eventEmitter will cal removeListener\n                // inside EventEmitter.once\n                const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = false\n        const globalZoneAwareCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][FALSE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        // global shared zoneAwareCallback to handle all event callback with capture = true\n        const globalZoneAwareCaptureCallback = function (event) {\n            // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n            // event will be undefined, so we need to use window.event\n            event = event || _global.event;\n            if (!event) {\n                return;\n            }\n            // event.target is needed for Samsung TV and SourceBuffer\n            // || global is needed https://github.com/angular/zone.js/issues/190\n            const target = this || event.target || _global;\n            const tasks = target[zoneSymbolEventNames$1[event.type][TRUE_STR]];\n            if (tasks) {\n                // invoke all tasks which attached to current target with given event.type and capture = false\n                // for performance concern, if task.length === 1, just invoke\n                if (tasks.length === 1) {\n                    invokeTask(tasks[0], target, event);\n                }\n                else {\n                    // https://github.com/angular/zone.js/issues/836\n                    // copy the tasks array before invoke, to avoid\n                    // the callback will remove itself or other listener\n                    const copyTasks = tasks.slice();\n                    for (let i = 0; i < copyTasks.length; i++) {\n                        if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                            break;\n                        }\n                        invokeTask(copyTasks[i], target, event);\n                    }\n                }\n            }\n        };\n        function patchEventTargetMethods(obj, patchOptions) {\n            if (!obj) {\n                return false;\n            }\n            let useGlobalCallback = true;\n            if (patchOptions && patchOptions.useG !== undefined) {\n                useGlobalCallback = patchOptions.useG;\n            }\n            const validateHandler = patchOptions && patchOptions.vh;\n            let checkDuplicate = true;\n            if (patchOptions && patchOptions.chkDup !== undefined) {\n                checkDuplicate = patchOptions.chkDup;\n            }\n            let returnTarget = false;\n            if (patchOptions && patchOptions.rt !== undefined) {\n                returnTarget = patchOptions.rt;\n            }\n            let proto = obj;\n            while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n                proto = ObjectGetPrototypeOf(proto);\n            }\n            if (!proto && obj[ADD_EVENT_LISTENER]) {\n                // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n                proto = obj;\n            }\n            if (!proto) {\n                return false;\n            }\n            if (proto[zoneSymbolAddEventListener]) {\n                return false;\n            }\n            const eventNameToString = patchOptions && patchOptions.eventNameToString;\n            // a shared global taskData to pass data for scheduleEventTask\n            // so we do not need to create a new object just for pass some data\n            const taskData = {};\n            const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n            const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n                proto[REMOVE_EVENT_LISTENER];\n            const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n                proto[LISTENERS_EVENT_LISTENER];\n            const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n                proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n            let nativePrependEventListener;\n            if (patchOptions && patchOptions.prepend) {\n                nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                    proto[patchOptions.prepend];\n            }\n            function checkIsPassive(task) {\n                if (!passiveSupported && typeof taskData.options !== 'boolean' &&\n                    typeof taskData.options !== 'undefined' && taskData.options !== null) {\n                    // options is a non-null non-undefined object\n                    // passive is not supported\n                    // don't pass options as object\n                    // just pass capture as a boolean\n                    task.options = !!taskData.options.capture;\n                    taskData.options = task.options;\n                }\n            }\n            const customScheduleGlobal = function (task) {\n                // if there is already a task for the eventName + capture,\n                // just return, because we use the shared globalZoneAwareCallback here.\n                if (taskData.isExisting) {\n                    return;\n                }\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n            };\n            const customCancelGlobal = function (task) {\n                // if task is not marked as isRemoved, this call is directly\n                // from Zone.prototype.cancelTask, we should remove the task\n                // from tasksList of target first\n                if (!task.isRemoved) {\n                    const symbolEventNames = zoneSymbolEventNames$1[task.eventName];\n                    let symbolEventName;\n                    if (symbolEventNames) {\n                        symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                    }\n                    const existingTasks = symbolEventName && task.target[symbolEventName];\n                    if (existingTasks) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            const existingTask = existingTasks[i];\n                            if (existingTask === task) {\n                                existingTasks.splice(i, 1);\n                                // set isRemoved to data for faster invokeTask check\n                                task.isRemoved = true;\n                                if (existingTasks.length === 0) {\n                                    // all tasks for the eventName + capture have gone,\n                                    // remove globalZoneAwareCallback and remove the task cache from target\n                                    task.allRemoved = true;\n                                    task.target[symbolEventName] = null;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n                // if all tasks for the eventName + capture have gone,\n                // we will really remove the global event callback,\n                // if not, return\n                if (!task.allRemoved) {\n                    return;\n                }\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n            };\n            const customScheduleNonGlobal = function (task) {\n                checkIsPassive(task);\n                return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customSchedulePrepend = function (task) {\n                return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n            };\n            const customCancelNonGlobal = function (task) {\n                return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n            };\n            const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n            const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n            const compareTaskCallbackVsDelegate = function (task, delegate) {\n                const typeOfDelegate = typeof delegate;\n                return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                    (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n            };\n            const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n            const blackListedEvents = Zone[zoneSymbol('BLACK_LISTED_EVENTS')];\n            const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n                return function () {\n                    const target = this || _global;\n                    let eventName = arguments[0];\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    let delegate = arguments[1];\n                    if (!delegate) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    if (isNode && eventName === 'uncaughtException') {\n                        // don't patch uncaughtException of nodejs to prevent endless loop\n                        return nativeListener.apply(this, arguments);\n                    }\n                    // don't create the bind delegate function for handleEvent\n                    // case here to improve addEventListener performance\n                    // we will create the bind delegate when invoke\n                    let isHandleEvent = false;\n                    if (typeof delegate !== 'function') {\n                        if (!delegate.handleEvent) {\n                            return nativeListener.apply(this, arguments);\n                        }\n                        isHandleEvent = true;\n                    }\n                    if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                        return;\n                    }\n                    const options = arguments[2];\n                    if (blackListedEvents) {\n                        // check black list\n                        for (let i = 0; i < blackListedEvents.length; i++) {\n                            if (eventName === blackListedEvents[i]) {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                    let capture;\n                    let once = false;\n                    if (options === undefined) {\n                        capture = false;\n                    }\n                    else if (options === true) {\n                        capture = true;\n                    }\n                    else if (options === false) {\n                        capture = false;\n                    }\n                    else {\n                        capture = options ? !!options.capture : false;\n                        once = options ? !!options.once : false;\n                    }\n                    const zone = Zone.current;\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    let symbolEventName;\n                    if (!symbolEventNames) {\n                        // the code is duplicate, but I just want to get some better performance\n                        const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n                        const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n                        const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n                        const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n                        zoneSymbolEventNames$1[eventName] = {};\n                        zoneSymbolEventNames$1[eventName][FALSE_STR] = symbol;\n                        zoneSymbolEventNames$1[eventName][TRUE_STR] = symbolCapture;\n                        symbolEventName = capture ? symbolCapture : symbol;\n                    }\n                    else {\n                        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                    }\n                    let existingTasks = target[symbolEventName];\n                    let isExisting = false;\n                    if (existingTasks) {\n                        // already have task registered\n                        isExisting = true;\n                        if (checkDuplicate) {\n                            for (let i = 0; i < existingTasks.length; i++) {\n                                if (compare(existingTasks[i], delegate)) {\n                                    // same callback, same capture, same event name, just return\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        existingTasks = target[symbolEventName] = [];\n                    }\n                    let source;\n                    const constructorName = target.constructor['name'];\n                    const targetSource = globalSources[constructorName];\n                    if (targetSource) {\n                        source = targetSource[eventName];\n                    }\n                    if (!source) {\n                        source = constructorName + addSource +\n                            (eventNameToString ? eventNameToString(eventName) : eventName);\n                    }\n                    // do not create a new object as task.data to pass those things\n                    // just use the global shared one\n                    taskData.options = options;\n                    if (once) {\n                        // if addEventListener with once options, we don't pass it to\n                        // native addEventListener, instead we keep the once setting\n                        // and handle ourselves.\n                        taskData.options.once = false;\n                    }\n                    taskData.target = target;\n                    taskData.capture = capture;\n                    taskData.eventName = eventName;\n                    taskData.isExisting = isExisting;\n                    const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                    // keep taskData into data to allow onScheduleEventTask to access the task information\n                    if (data) {\n                        data.taskData = taskData;\n                    }\n                    const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                    // should clear taskData.target to avoid memory leak\n                    // issue, https://github.com/angular/angular/issues/20442\n                    taskData.target = null;\n                    // need to clear up taskData because it is a global object\n                    if (data) {\n                        data.taskData = null;\n                    }\n                    // have to save those information to task in case\n                    // application may call task.zone.cancelTask() directly\n                    if (once) {\n                        options.once = true;\n                    }\n                    if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                        // if not support passive, and we pass an option object\n                        // to addEventListener, we should save the options to task\n                        task.options = options;\n                    }\n                    task.target = target;\n                    task.capture = capture;\n                    task.eventName = eventName;\n                    if (isHandleEvent) {\n                        // save original delegate for compare to check duplicate\n                        task.originalDelegate = delegate;\n                    }\n                    if (!prepend) {\n                        existingTasks.push(task);\n                    }\n                    else {\n                        existingTasks.unshift(task);\n                    }\n                    if (returnTarget) {\n                        return target;\n                    }\n                };\n            };\n            proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n            if (nativePrependEventListener) {\n                proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n            }\n            proto[REMOVE_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const options = arguments[2];\n                let capture;\n                if (options === undefined) {\n                    capture = false;\n                }\n                else if (options === true) {\n                    capture = true;\n                }\n                else if (options === false) {\n                    capture = false;\n                }\n                else {\n                    capture = options ? !!options.capture : false;\n                }\n                const delegate = arguments[1];\n                if (!delegate) {\n                    return nativeRemoveEventListener.apply(this, arguments);\n                }\n                if (validateHandler &&\n                    !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                    return;\n                }\n                const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (compare(existingTask, delegate)) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            existingTask.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                existingTask.allRemoved = true;\n                                target[symbolEventName] = null;\n                                // in the target, we have an event listener which is added by on_property\n                                // such as target.onclick = function() {}, so we need to clear this internal\n                                // property too if all delegates all removed\n                                if (typeof eventName === 'string') {\n                                    const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                    target[onPropertySymbol] = null;\n                                }\n                            }\n                            existingTask.zone.cancelTask(existingTask);\n                            if (returnTarget) {\n                                return target;\n                            }\n                            return;\n                        }\n                    }\n                }\n                // issue 930, didn't find the event name or callback\n                // from zone kept existingTasks, the callback maybe\n                // added outside of zone, we need to call native removeEventListener\n                // to try to remove it.\n                return nativeRemoveEventListener.apply(this, arguments);\n            };\n            proto[LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const listeners = [];\n                const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n                for (let i = 0; i < tasks.length; i++) {\n                    const task = tasks[i];\n                    let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                    listeners.push(delegate);\n                }\n                return listeners;\n            };\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (!eventName) {\n                    const keys = Object.keys(target);\n                    for (let i = 0; i < keys.length; i++) {\n                        const prop = keys[i];\n                        const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                        let evtName = match && match[1];\n                        // in nodejs EventEmitter, removeListener event is\n                        // used for monitoring the removeListener call,\n                        // so just keep removeListener eventListener until\n                        // all other eventListeners are removed\n                        if (evtName && evtName !== 'removeListener') {\n                            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                        }\n                    }\n                    // remove removeListener listener finally\n                    this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n                }\n                else {\n                    if (patchOptions && patchOptions.transferEventName) {\n                        eventName = patchOptions.transferEventName(eventName);\n                    }\n                    const symbolEventNames = zoneSymbolEventNames$1[eventName];\n                    if (symbolEventNames) {\n                        const symbolEventName = symbolEventNames[FALSE_STR];\n                        const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                        const tasks = target[symbolEventName];\n                        const captureTasks = target[symbolCaptureEventName];\n                        if (tasks) {\n                            const removeTasks = tasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                        if (captureTasks) {\n                            const removeTasks = captureTasks.slice();\n                            for (let i = 0; i < removeTasks.length; i++) {\n                                const task = removeTasks[i];\n                                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                                this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                            }\n                        }\n                    }\n                }\n                if (returnTarget) {\n                    return this;\n                }\n            };\n            // for native toString patch\n            attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n            attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n            if (nativeRemoveAllListeners) {\n                attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n            }\n            if (nativeListeners) {\n                attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n            }\n            return true;\n        }\n        let results = [];\n        for (let i = 0; i < apis.length; i++) {\n            results[i] = patchEventTargetMethods(apis[i], patchOptions);\n        }\n        return results;\n    }\n    function findEventTasks(target, eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    function patchEventPrototype(global, api) {\n        const Event = global['Event'];\n        if (Event && Event.prototype) {\n            api.patchMethod(Event.prototype, 'stopImmediatePropagation', (delegate) => function (self, args) {\n                self[IMMEDIATE_PROPAGATION_SYMBOL] = true;\n                // we need to call the native stopImmediatePropagation\n                // in case in some hybrid application, some part of\n                // application will be controlled by zone, some are not\n                delegate && delegate.apply(self, args);\n            });\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCallbacks(api, target, targetName, method, callbacks) {\n        const symbol = Zone.__symbol__(method);\n        if (target[symbol]) {\n            return;\n        }\n        const nativeDelegate = target[symbol] = target[method];\n        target[method] = function (name, opts, options) {\n            if (opts && opts.prototype) {\n                callbacks.forEach(function (callback) {\n                    const source = `${targetName}.${method}::` + callback;\n                    const prototype = opts.prototype;\n                    if (prototype.hasOwnProperty(callback)) {\n                        const descriptor = api.ObjectGetOwnPropertyDescriptor(prototype, callback);\n                        if (descriptor && descriptor.value) {\n                            descriptor.value = api.wrapWithCurrentZone(descriptor.value, source);\n                            api._redefineProperty(opts.prototype, callback, descriptor);\n                        }\n                        else if (prototype[callback]) {\n                            prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                        }\n                    }\n                    else if (prototype[callback]) {\n                        prototype[callback] = api.wrapWithCurrentZone(prototype[callback], source);\n                    }\n                });\n            }\n            return nativeDelegate.call(target, name, opts, options);\n        };\n        api.attachOriginToPatched(target[method], nativeDelegate);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const globalEventHandlersEventNames = [\n        'abort',\n        'animationcancel',\n        'animationend',\n        'animationiteration',\n        'auxclick',\n        'beforeinput',\n        'blur',\n        'cancel',\n        'canplay',\n        'canplaythrough',\n        'change',\n        'compositionstart',\n        'compositionupdate',\n        'compositionend',\n        'cuechange',\n        'click',\n        'close',\n        'contextmenu',\n        'curechange',\n        'dblclick',\n        'drag',\n        'dragend',\n        'dragenter',\n        'dragexit',\n        'dragleave',\n        'dragover',\n        'drop',\n        'durationchange',\n        'emptied',\n        'ended',\n        'error',\n        'focus',\n        'focusin',\n        'focusout',\n        'gotpointercapture',\n        'input',\n        'invalid',\n        'keydown',\n        'keypress',\n        'keyup',\n        'load',\n        'loadstart',\n        'loadeddata',\n        'loadedmetadata',\n        'lostpointercapture',\n        'mousedown',\n        'mouseenter',\n        'mouseleave',\n        'mousemove',\n        'mouseout',\n        'mouseover',\n        'mouseup',\n        'mousewheel',\n        'orientationchange',\n        'pause',\n        'play',\n        'playing',\n        'pointercancel',\n        'pointerdown',\n        'pointerenter',\n        'pointerleave',\n        'pointerlockchange',\n        'mozpointerlockchange',\n        'webkitpointerlockerchange',\n        'pointerlockerror',\n        'mozpointerlockerror',\n        'webkitpointerlockerror',\n        'pointermove',\n        'pointout',\n        'pointerover',\n        'pointerup',\n        'progress',\n        'ratechange',\n        'reset',\n        'resize',\n        'scroll',\n        'seeked',\n        'seeking',\n        'select',\n        'selectionchange',\n        'selectstart',\n        'show',\n        'sort',\n        'stalled',\n        'submit',\n        'suspend',\n        'timeupdate',\n        'volumechange',\n        'touchcancel',\n        'touchmove',\n        'touchstart',\n        'touchend',\n        'transitioncancel',\n        'transitionend',\n        'waiting',\n        'wheel'\n    ];\n    const documentEventNames = [\n        'afterscriptexecute', 'beforescriptexecute', 'DOMContentLoaded', 'freeze', 'fullscreenchange',\n        'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange', 'fullscreenerror',\n        'mozfullscreenerror', 'webkitfullscreenerror', 'msfullscreenerror', 'readystatechange',\n        'visibilitychange', 'resume'\n    ];\n    const windowEventNames = [\n        'absolutedeviceorientation',\n        'afterinput',\n        'afterprint',\n        'appinstalled',\n        'beforeinstallprompt',\n        'beforeprint',\n        'beforeunload',\n        'devicelight',\n        'devicemotion',\n        'deviceorientation',\n        'deviceorientationabsolute',\n        'deviceproximity',\n        'hashchange',\n        'languagechange',\n        'message',\n        'mozbeforepaint',\n        'offline',\n        'online',\n        'paint',\n        'pageshow',\n        'pagehide',\n        'popstate',\n        'rejectionhandled',\n        'storage',\n        'unhandledrejection',\n        'unload',\n        'userproximity',\n        'vrdisplyconnected',\n        'vrdisplaydisconnected',\n        'vrdisplaypresentchange'\n    ];\n    const htmlElementEventNames = [\n        'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'dragstart', 'loadend',\n        'animationstart', 'search', 'transitionrun', 'transitionstart', 'webkitanimationend',\n        'webkitanimationiteration', 'webkitanimationstart', 'webkittransitionend'\n    ];\n    const mediaElementEventNames = ['encrypted', 'waitingforkey', 'msneedkey', 'mozinterruptbegin', 'mozinterruptend'];\n    const ieElementEventNames = [\n        'activate',\n        'afterupdate',\n        'ariarequest',\n        'beforeactivate',\n        'beforedeactivate',\n        'beforeeditfocus',\n        'beforeupdate',\n        'cellchange',\n        'controlselect',\n        'dataavailable',\n        'datasetchanged',\n        'datasetcomplete',\n        'errorupdate',\n        'filterchange',\n        'layoutcomplete',\n        'losecapture',\n        'move',\n        'moveend',\n        'movestart',\n        'propertychange',\n        'resizeend',\n        'resizestart',\n        'rowenter',\n        'rowexit',\n        'rowsdelete',\n        'rowsinserted',\n        'command',\n        'compassneedscalibration',\n        'deactivate',\n        'help',\n        'mscontentzoom',\n        'msmanipulationstatechanged',\n        'msgesturechange',\n        'msgesturedoubletap',\n        'msgestureend',\n        'msgesturehold',\n        'msgesturestart',\n        'msgesturetap',\n        'msgotpointercapture',\n        'msinertiastart',\n        'mslostpointercapture',\n        'mspointercancel',\n        'mspointerdown',\n        'mspointerenter',\n        'mspointerhover',\n        'mspointerleave',\n        'mspointermove',\n        'mspointerout',\n        'mspointerover',\n        'mspointerup',\n        'pointerout',\n        'mssitemodejumplistitemremoved',\n        'msthumbnailclick',\n        'stop',\n        'storagecommit'\n    ];\n    const webglEventNames = ['webglcontextrestored', 'webglcontextlost', 'webglcontextcreationerror'];\n    const formEventNames = ['autocomplete', 'autocompleteerror'];\n    const detailEventNames = ['toggle'];\n    const frameEventNames = ['load'];\n    const frameSetEventNames = ['blur', 'error', 'focus', 'load', 'resize', 'scroll', 'messageerror'];\n    const marqueeEventNames = ['bounce', 'finish', 'start'];\n    const XMLHttpRequestEventNames = [\n        'loadstart', 'progress', 'abort', 'error', 'load', 'progress', 'timeout', 'loadend',\n        'readystatechange'\n    ];\n    const IDBIndexEventNames = ['upgradeneeded', 'complete', 'abort', 'success', 'error', 'blocked', 'versionchange', 'close'];\n    const websocketEventNames = ['close', 'error', 'open', 'message'];\n    const workerEventNames = ['error', 'message'];\n    const eventNames = globalEventHandlersEventNames.concat(webglEventNames, formEventNames, detailEventNames, documentEventNames, windowEventNames, htmlElementEventNames, ieElementEventNames);\n    function filterProperties(target, onProperties, ignoreProperties) {\n        if (!ignoreProperties || ignoreProperties.length === 0) {\n            return onProperties;\n        }\n        const tip = ignoreProperties.filter(ip => ip.target === target);\n        if (!tip || tip.length === 0) {\n            return onProperties;\n        }\n        const targetIgnoreProperties = tip[0].ignoreProperties;\n        return onProperties.filter(op => targetIgnoreProperties.indexOf(op) === -1);\n    }\n    function patchFilteredProperties(target, onProperties, ignoreProperties, prototype) {\n        // check whether target is available, sometimes target will be undefined\n        // because different browser or some 3rd party plugin.\n        if (!target) {\n            return;\n        }\n        const filteredProperties = filterProperties(target, onProperties, ignoreProperties);\n        patchOnProperties(target, filteredProperties, prototype);\n    }\n    function propertyDescriptorPatch(api, _global) {\n        if (isNode && !isMix) {\n            return;\n        }\n        if (Zone[api.symbol('patchEvents')]) {\n            // events are already been patched by legacy patch.\n            return;\n        }\n        const supportsWebSocket = typeof WebSocket !== 'undefined';\n        const ignoreProperties = _global['__Zone_ignore_on_properties'];\n        // for browsers that we can patch the descriptor:  Chrome & Firefox\n        if (isBrowser) {\n            const internalWindow = window;\n            const ignoreErrorProperties = isIE ? [{ target: internalWindow, ignoreProperties: ['error'] }] : [];\n            // in IE/Edge, onProp not exist in window object, but in WindowPrototype\n            // so we need to pass WindowPrototype to check onProp exist or not\n            patchFilteredProperties(internalWindow, eventNames.concat(['messageerror']), ignoreProperties ? ignoreProperties.concat(ignoreErrorProperties) : ignoreProperties, ObjectGetPrototypeOf(internalWindow));\n            patchFilteredProperties(Document.prototype, eventNames, ignoreProperties);\n            if (typeof internalWindow['SVGElement'] !== 'undefined') {\n                patchFilteredProperties(internalWindow['SVGElement'].prototype, eventNames, ignoreProperties);\n            }\n            patchFilteredProperties(Element.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLElement.prototype, eventNames, ignoreProperties);\n            patchFilteredProperties(HTMLMediaElement.prototype, mediaElementEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLFrameSetElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLBodyElement.prototype, windowEventNames.concat(frameSetEventNames), ignoreProperties);\n            patchFilteredProperties(HTMLFrameElement.prototype, frameEventNames, ignoreProperties);\n            patchFilteredProperties(HTMLIFrameElement.prototype, frameEventNames, ignoreProperties);\n            const HTMLMarqueeElement = internalWindow['HTMLMarqueeElement'];\n            if (HTMLMarqueeElement) {\n                patchFilteredProperties(HTMLMarqueeElement.prototype, marqueeEventNames, ignoreProperties);\n            }\n            const Worker = internalWindow['Worker'];\n            if (Worker) {\n                patchFilteredProperties(Worker.prototype, workerEventNames, ignoreProperties);\n            }\n        }\n        const XMLHttpRequest = _global['XMLHttpRequest'];\n        if (XMLHttpRequest) {\n            // XMLHttpRequest is not available in ServiceWorker, so we need to check here\n            patchFilteredProperties(XMLHttpRequest.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        const XMLHttpRequestEventTarget = _global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget) {\n            patchFilteredProperties(XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype, XMLHttpRequestEventNames, ignoreProperties);\n        }\n        if (typeof IDBIndex !== 'undefined') {\n            patchFilteredProperties(IDBIndex.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBOpenDBRequest.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBDatabase.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBTransaction.prototype, IDBIndexEventNames, ignoreProperties);\n            patchFilteredProperties(IDBCursor.prototype, IDBIndexEventNames, ignoreProperties);\n        }\n        if (supportsWebSocket) {\n            patchFilteredProperties(WebSocket.prototype, websocketEventNames, ignoreProperties);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('util', (global, Zone, api) => {\n        api.patchOnProperties = patchOnProperties;\n        api.patchMethod = patchMethod;\n        api.bindArguments = bindArguments;\n        api.patchMacroTask = patchMacroTask;\n        // In earlier version of zone.js (<0.9.0), we use env name `__zone_symbol__BLACK_LISTED_EVENTS` to\n        // define which events will not be patched by `Zone.js`.\n        // In newer version (>=0.9.0), we change the env name to `__zone_symbol__UNPATCHED_EVENTS` to keep\n        // the name consistent with angular repo.\n        // The  `__zone_symbol__BLACK_LISTED_EVENTS` is deprecated, but it is still be supported for\n        // backwards compatibility.\n        const SYMBOL_BLACK_LISTED_EVENTS = Zone.__symbol__('BLACK_LISTED_EVENTS');\n        const SYMBOL_UNPATCHED_EVENTS = Zone.__symbol__('UNPATCHED_EVENTS');\n        if (global[SYMBOL_UNPATCHED_EVENTS]) {\n            global[SYMBOL_BLACK_LISTED_EVENTS] = global[SYMBOL_UNPATCHED_EVENTS];\n        }\n        if (global[SYMBOL_BLACK_LISTED_EVENTS]) {\n            Zone[SYMBOL_BLACK_LISTED_EVENTS] = Zone[SYMBOL_UNPATCHED_EVENTS] =\n                global[SYMBOL_BLACK_LISTED_EVENTS];\n        }\n        api.patchEventPrototype = patchEventPrototype;\n        api.patchEventTarget = patchEventTarget;\n        api.isIEOrEdge = isIEOrEdge;\n        api.ObjectDefineProperty = ObjectDefineProperty;\n        api.ObjectGetOwnPropertyDescriptor = ObjectGetOwnPropertyDescriptor;\n        api.ObjectCreate = ObjectCreate;\n        api.ArraySlice = ArraySlice;\n        api.patchClass = patchClass;\n        api.wrapWithCurrentZone = wrapWithCurrentZone;\n        api.filterProperties = filterProperties;\n        api.attachOriginToPatched = attachOriginToPatched;\n        api._redefineProperty = Object.defineProperty;\n        api.patchCallbacks = patchCallbacks;\n        api.getGlobalObjects = () => ({ globalSources, zoneSymbolEventNames: zoneSymbolEventNames$1, eventNames, isBrowser, isMix, isNode, TRUE_STR,\n            FALSE_STR, ZONE_SYMBOL_PREFIX, ADD_EVENT_LISTENER_STR, REMOVE_EVENT_LISTENER_STR });\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    const taskSymbol = zoneSymbol('zoneTask');\n    function patchTimer(window, setName, cancelName, nameSuffix) {\n        let setNative = null;\n        let clearNative = null;\n        setName += nameSuffix;\n        cancelName += nameSuffix;\n        const tasksByHandleId = {};\n        function scheduleTask(task) {\n            const data = task.data;\n            function timer() {\n                try {\n                    task.invoke.apply(this, arguments);\n                }\n                finally {\n                    // issue-934, task will be cancelled\n                    // even it is a periodic task such as\n                    // setInterval\n                    if (!(task.data && task.data.isPeriodic)) {\n                        if (typeof data.handleId === 'number') {\n                            // in non-nodejs env, we remove timerId\n                            // from local cache\n                            delete tasksByHandleId[data.handleId];\n                        }\n                        else if (data.handleId) {\n                            // Node returns complex objects as handleIds\n                            // we remove task reference from timer object\n                            data.handleId[taskSymbol] = null;\n                        }\n                    }\n                }\n            }\n            data.args[0] = timer;\n            data.handleId = setNative.apply(window, data.args);\n            return task;\n        }\n        function clearTask(task) { return clearNative(task.data.handleId); }\n        setNative =\n            patchMethod(window, setName, (delegate) => function (self, args) {\n                if (typeof args[0] === 'function') {\n                    const options = {\n                        isPeriodic: nameSuffix === 'Interval',\n                        delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                            undefined,\n                        args: args\n                    };\n                    const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                    if (!task) {\n                        return task;\n                    }\n                    // Node.js must additionally support the ref and unref functions.\n                    const handle = task.data.handleId;\n                    if (typeof handle === 'number') {\n                        // for non nodejs env, we save handleId: task\n                        // mapping in local cache for clearTimeout\n                        tasksByHandleId[handle] = task;\n                    }\n                    else if (handle) {\n                        // for nodejs env, we save task\n                        // reference in timerId Object for clearTimeout\n                        handle[taskSymbol] = task;\n                    }\n                    // check whether handle is null, because some polyfill or browser\n                    // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                    if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                        typeof handle.unref === 'function') {\n                        task.ref = handle.ref.bind(handle);\n                        task.unref = handle.unref.bind(handle);\n                    }\n                    if (typeof handle === 'number' || handle) {\n                        return handle;\n                    }\n                    return task;\n                }\n                else {\n                    // cause an error by calling it directly.\n                    return delegate.apply(window, args);\n                }\n            });\n        clearNative =\n            patchMethod(window, cancelName, (delegate) => function (self, args) {\n                const id = args[0];\n                let task;\n                if (typeof id === 'number') {\n                    // non nodejs env.\n                    task = tasksByHandleId[id];\n                }\n                else {\n                    // nodejs env.\n                    task = id && id[taskSymbol];\n                    // other environments.\n                    if (!task) {\n                        task = id;\n                    }\n                }\n                if (task && typeof task.type === 'string') {\n                    if (task.state !== 'notScheduled' &&\n                        (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                        if (typeof id === 'number') {\n                            delete tasksByHandleId[id];\n                        }\n                        else if (id) {\n                            id[taskSymbol] = null;\n                        }\n                        // Do not cancel already canceled functions\n                        task.zone.cancelTask(task);\n                    }\n                }\n                else {\n                    // cause an error by calling it directly.\n                    delegate.apply(window, args);\n                }\n            });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function patchCustomElements(_global, api) {\n        const { isBrowser, isMix } = api.getGlobalObjects();\n        if ((!isBrowser && !isMix) || !_global['customElements'] || !('customElements' in _global)) {\n            return;\n        }\n        const callbacks = ['connectedCallback', 'disconnectedCallback', 'adoptedCallback', 'attributeChangedCallback'];\n        api.patchCallbacks(api, _global.customElements, 'customElements', 'define', callbacks);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function eventTargetPatch(_global, api) {\n        if (Zone[api.symbol('patchEventTarget')]) {\n            // EventTarget is already patched.\n            return;\n        }\n        const { eventNames, zoneSymbolEventNames, TRUE_STR, FALSE_STR, ZONE_SYMBOL_PREFIX } = api.getGlobalObjects();\n        //  predefine all __zone_symbol__ + eventName + true/false string\n        for (let i = 0; i < eventNames.length; i++) {\n            const eventName = eventNames[i];\n            const falseEventName = eventName + FALSE_STR;\n            const trueEventName = eventName + TRUE_STR;\n            const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n            const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n            zoneSymbolEventNames[eventName] = {};\n            zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n            zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n        }\n        const EVENT_TARGET = _global['EventTarget'];\n        if (!EVENT_TARGET || !EVENT_TARGET.prototype) {\n            return;\n        }\n        api.patchEventTarget(_global, [EVENT_TARGET && EVENT_TARGET.prototype]);\n        return true;\n    }\n    function patchEvent(global, api) {\n        api.patchEventPrototype(global, api);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    Zone.__load_patch('legacy', (global) => {\n        const legacyPatch = global[Zone.__symbol__('legacyPatch')];\n        if (legacyPatch) {\n            legacyPatch();\n        }\n    });\n    Zone.__load_patch('timers', (global) => {\n        const set = 'set';\n        const clear = 'clear';\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    });\n    Zone.__load_patch('requestAnimationFrame', (global) => {\n        patchTimer(global, 'request', 'cancel', 'AnimationFrame');\n        patchTimer(global, 'mozRequest', 'mozCancel', 'AnimationFrame');\n        patchTimer(global, 'webkitRequest', 'webkitCancel', 'AnimationFrame');\n    });\n    Zone.__load_patch('blocking', (global, Zone) => {\n        const blockingMethods = ['alert', 'prompt', 'confirm'];\n        for (let i = 0; i < blockingMethods.length; i++) {\n            const name = blockingMethods[i];\n            patchMethod(global, name, (delegate, symbol, name) => {\n                return function (s, args) {\n                    return Zone.current.run(delegate, global, args, name);\n                };\n            });\n        }\n    });\n    Zone.__load_patch('EventTarget', (global, Zone, api) => {\n        patchEvent(global, api);\n        eventTargetPatch(global, api);\n        // patch XMLHttpRequestEventTarget's addEventListener/removeEventListener\n        const XMLHttpRequestEventTarget = global['XMLHttpRequestEventTarget'];\n        if (XMLHttpRequestEventTarget && XMLHttpRequestEventTarget.prototype) {\n            api.patchEventTarget(global, [XMLHttpRequestEventTarget.prototype]);\n        }\n        patchClass('MutationObserver');\n        patchClass('WebKitMutationObserver');\n        patchClass('IntersectionObserver');\n        patchClass('FileReader');\n    });\n    Zone.__load_patch('on_property', (global, Zone, api) => {\n        propertyDescriptorPatch(api, global);\n    });\n    Zone.__load_patch('customElements', (global, Zone, api) => {\n        patchCustomElements(global, api);\n    });\n    Zone.__load_patch('XHR', (global, Zone) => {\n        // Treat XMLHttpRequest as a macrotask.\n        patchXHR(global);\n        const XHR_TASK = zoneSymbol('xhrTask');\n        const XHR_SYNC = zoneSymbol('xhrSync');\n        const XHR_LISTENER = zoneSymbol('xhrListener');\n        const XHR_SCHEDULED = zoneSymbol('xhrScheduled');\n        const XHR_URL = zoneSymbol('xhrURL');\n        const XHR_ERROR_BEFORE_SCHEDULED = zoneSymbol('xhrErrorBeforeScheduled');\n        function patchXHR(window) {\n            const XMLHttpRequest = window['XMLHttpRequest'];\n            if (!XMLHttpRequest) {\n                // XMLHttpRequest is not available in service worker\n                return;\n            }\n            const XMLHttpRequestPrototype = XMLHttpRequest.prototype;\n            function findPendingTask(target) { return target[XHR_TASK]; }\n            let oriAddListener = XMLHttpRequestPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n            let oriRemoveListener = XMLHttpRequestPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n            if (!oriAddListener) {\n                const XMLHttpRequestEventTarget = window['XMLHttpRequestEventTarget'];\n                if (XMLHttpRequestEventTarget) {\n                    const XMLHttpRequestEventTargetPrototype = XMLHttpRequestEventTarget.prototype;\n                    oriAddListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = XMLHttpRequestEventTargetPrototype[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n            }\n            const READY_STATE_CHANGE = 'readystatechange';\n            const SCHEDULED = 'scheduled';\n            function scheduleTask(task) {\n                const data = task.data;\n                const target = data.target;\n                target[XHR_SCHEDULED] = false;\n                target[XHR_ERROR_BEFORE_SCHEDULED] = false;\n                // remove existing event listener\n                const listener = target[XHR_LISTENER];\n                if (!oriAddListener) {\n                    oriAddListener = target[ZONE_SYMBOL_ADD_EVENT_LISTENER];\n                    oriRemoveListener = target[ZONE_SYMBOL_REMOVE_EVENT_LISTENER];\n                }\n                if (listener) {\n                    oriRemoveListener.call(target, READY_STATE_CHANGE, listener);\n                }\n                const newListener = target[XHR_LISTENER] = () => {\n                    if (target.readyState === target.DONE) {\n                        // sometimes on some browsers XMLHttpRequest will fire onreadystatechange with\n                        // readyState=4 multiple times, so we need to check task state here\n                        if (!data.aborted && target[XHR_SCHEDULED] && task.state === SCHEDULED) {\n                            // check whether the xhr has registered onload listener\n                            // if that is the case, the task should invoke after all\n                            // onload listeners finish.\n                            const loadTasks = target[Zone.__symbol__('loadfalse')];\n                            if (loadTasks && loadTasks.length > 0) {\n                                const oriInvoke = task.invoke;\n                                task.invoke = function () {\n                                    // need to load the tasks again, because in other\n                                    // load listener, they may remove themselves\n                                    const loadTasks = target[Zone.__symbol__('loadfalse')];\n                                    for (let i = 0; i < loadTasks.length; i++) {\n                                        if (loadTasks[i] === task) {\n                                            loadTasks.splice(i, 1);\n                                        }\n                                    }\n                                    if (!data.aborted && task.state === SCHEDULED) {\n                                        oriInvoke.call(task);\n                                    }\n                                };\n                                loadTasks.push(task);\n                            }\n                            else {\n                                task.invoke();\n                            }\n                        }\n                        else if (!data.aborted && target[XHR_SCHEDULED] === false) {\n                            // error occurs when xhr.send()\n                            target[XHR_ERROR_BEFORE_SCHEDULED] = true;\n                        }\n                    }\n                };\n                oriAddListener.call(target, READY_STATE_CHANGE, newListener);\n                const storedTask = target[XHR_TASK];\n                if (!storedTask) {\n                    target[XHR_TASK] = task;\n                }\n                sendNative.apply(target, data.args);\n                target[XHR_SCHEDULED] = true;\n                return task;\n            }\n            function placeholderCallback() { }\n            function clearTask(task) {\n                const data = task.data;\n                // Note - ideally, we would call data.target.removeEventListener here, but it's too late\n                // to prevent it from firing. So instead, we store info for the event listener.\n                data.aborted = true;\n                return abortNative.apply(data.target, data.args);\n            }\n            const openNative = patchMethod(XMLHttpRequestPrototype, 'open', () => function (self, args) {\n                self[XHR_SYNC] = args[2] == false;\n                self[XHR_URL] = args[1];\n                return openNative.apply(self, args);\n            });\n            const XMLHTTPREQUEST_SOURCE = 'XMLHttpRequest.send';\n            const fetchTaskAborting = zoneSymbol('fetchTaskAborting');\n            const fetchTaskScheduling = zoneSymbol('fetchTaskScheduling');\n            const sendNative = patchMethod(XMLHttpRequestPrototype, 'send', () => function (self, args) {\n                if (Zone.current[fetchTaskScheduling] === true) {\n                    // a fetch is scheduling, so we are using xhr to polyfill fetch\n                    // and because we already schedule macroTask for fetch, we should\n                    // not schedule a macroTask for xhr again\n                    return sendNative.apply(self, args);\n                }\n                if (self[XHR_SYNC]) {\n                    // if the XHR is sync there is no task to schedule, just execute the code.\n                    return sendNative.apply(self, args);\n                }\n                else {\n                    const options = { target: self, url: self[XHR_URL], isPeriodic: false, args: args, aborted: false };\n                    const task = scheduleMacroTaskWithCurrentZone(XMLHTTPREQUEST_SOURCE, placeholderCallback, options, scheduleTask, clearTask);\n                    if (self && self[XHR_ERROR_BEFORE_SCHEDULED] === true && !options.aborted &&\n                        task.state === SCHEDULED) {\n                        // xhr request throw error when send\n                        // we should invoke task instead of leaving a scheduled\n                        // pending macroTask\n                        task.invoke();\n                    }\n                }\n            });\n            const abortNative = patchMethod(XMLHttpRequestPrototype, 'abort', () => function (self, args) {\n                const task = findPendingTask(self);\n                if (task && typeof task.type == 'string') {\n                    // If the XHR has already completed, do nothing.\n                    // If the XHR has already been aborted, do nothing.\n                    // Fix #569, call abort multiple times before done will cause\n                    // macroTask task count be negative number\n                    if (task.cancelFn == null || (task.data && task.data.aborted)) {\n                        return;\n                    }\n                    task.zone.cancelTask(task);\n                }\n                else if (Zone.current[fetchTaskAborting] === true) {\n                    // the abort is called from fetch polyfill, we need to call native abort of XHR.\n                    return abortNative.apply(self, args);\n                }\n                // Otherwise, we are trying to abort an XHR which has not yet been sent, so there is no\n                // task\n                // to cancel. Do nothing.\n            });\n        }\n    });\n    Zone.__load_patch('geolocation', (global) => {\n        /// GEO_LOCATION\n        if (global['navigator'] && global['navigator'].geolocation) {\n            patchPrototype(global['navigator'].geolocation, ['getCurrentPosition', 'watchPosition']);\n        }\n    });\n    Zone.__load_patch('PromiseRejectionEvent', (global, Zone) => {\n        // handle unhandled promise rejection\n        function findPromiseRejectionHandler(evtName) {\n            return function (e) {\n                const eventTasks = findEventTasks(global, evtName);\n                eventTasks.forEach(eventTask => {\n                    // windows has added unhandledrejection event listener\n                    // trigger the event listener\n                    const PromiseRejectionEvent = global['PromiseRejectionEvent'];\n                    if (PromiseRejectionEvent) {\n                        const evt = new PromiseRejectionEvent(evtName, { promise: e.promise, reason: e.rejection });\n                        eventTask.invoke(evt);\n                    }\n                });\n            };\n        }\n        if (global['PromiseRejectionEvent']) {\n            Zone[zoneSymbol('unhandledPromiseRejectionHandler')] =\n                findPromiseRejectionHandler('unhandledrejection');\n            Zone[zoneSymbol('rejectionHandledHandler')] =\n                findPromiseRejectionHandler('rejectionhandled');\n        }\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n}));\n"]}